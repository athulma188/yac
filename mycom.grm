%%
%term
    EOF 
  | ID of string
  | INT of int  
  | FLOAT of real
  | STRING of string
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | IF | ELSE | WHILE | FOR 
  | BREAK | MOD | NOT
  | INTEGER | FLOATV | CHAR 

%nonterm  
	  Prog of Ast.Exp list| Sts of Ast.Exp list 
	| St of Ast.Exp | ExpSt of Ast.Exp | ComSt of Ast.Exp | SelSt of Ast.Exp | ItSt of Ast.Exp | SpcSt of Ast.Exp 
	| Decl of Ast.Exp 
	| TypeV of Ast.typev  



%name MyC
 
%%
Prog : Sts                   	(Sts)

Sts : St Sts                 	(St :: Sts)
    |                        	([])

St : ExpSt 			(ExpSt)
   | ComSt			(ComSt)
   | SelSt			(SelSt)
   | ItSt                    	(ItSt)
   | SpcSt                   	(SpcSt)
   | Decl			(Decl)

ComSt : LBRACE Sts RBRACE 			(Ast.CompSt(Sts))

SpcSt : BREAK SEMICOLON				(Ast.SpecExp(Ast.Break))
      | CONTINUE SEMICOLON			(Ast.SpecExp(Ast.Continue))

ItSt : WHILE LPAREN SimExp RPAREN St 		(Ast.WhileExp(SimExp,St))
		 
Decl : TypeV ID SEMICOLON			(Ast.Declr(TypeV,Ast.Var(ID)))
     | TypeV ID ASSIGN Exp SEMICOLON 		(Ast.DecAss(TypeV, Ast.Var(ID),Exp))


TypeV :   INTEGER 				(Ast.INTEGER)
	| FLOATV				(Ast.FLOATV)
	| CHAR					(Ast.CHAR)
	     
